/**********************************************\
*  FancyPants — customElements micro-lib   O   *
*  MIT — Copyright © 2020 Devin Weaver    /|\  *
*  https://sukima.github.io/fancy-pants/  </>  *
\**********************************************/
import{activateTracking,memoizeFunction,createTag,dirtyTag,consumeTag,setOnTagDirtied}from"./tracking.js";import{scheduleRender,registerRenderer,unregisterRenderer}from"./renderer.js";setOnTagDirtied(scheduleRender);const ATTRIBUTE_TAGS=Symbol("attribute tags");const RENDER=Symbol("memoized render");const templates=new Map;function dasherize(e){return e.replace(/([a-z\d])([A-Z])/g,"$1-$2").toLowerCase()}function makeTemplateElement(e){if(e===null){return null}let t=document.createElement("template");t.innerHTML=e??"";return t}function componentOf(e){class t extends e{constructor(){super();let e=templates.get(this.tagName.toLowerCase());if(e){this.shadow=this.attachShadow({mode:"open"});this.shadow.appendChild(e.content.cloneNode(true))}this[RENDER]=memoizeFunction((()=>this.render()));this[ATTRIBUTE_TAGS]=new Map((this.constructor.observedAttributes??[]).map((e=>[e,createTag()])))}connectedCallback(){activateTracking(this);registerRenderer(this[RENDER]);scheduleRender()}disconnectedCallback(){unregisterRenderer(this[RENDER])}attributeChangedCallback(e){dirtyTag(this[ATTRIBUTE_TAGS].get(e))}getAttribute(e){consumeTag(this[ATTRIBUTE_TAGS].get(e));return super.getAttribute(e)}render(){}static register(e,t=document){let r;if(typeof e==="string"){r=()=>t.querySelector(e)}else if(e instanceof Element){r=()=>e}else{let e=t.querySelector(`template#${this.tagName}`);r=()=>e??makeTemplateElement(this.template)}templates.set(this.tagName,r());customElements.define(this.tagName,this)}static get tagName(){return dasherize(this.name)}static get template(){return"<style>:host { all: inherit; }</style><slot></slot>"}}return t}export default componentOf(HTMLElement);export{componentOf};
